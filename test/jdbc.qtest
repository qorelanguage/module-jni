#!/usr/bin/env qore

%new-style
%require-types
%strict-args
%enable-all-warnings

%requires jni
%requires QUnit

%exec-class Main

public class Main inherits QUnit::Test {
    private {
        Datasource ds;

        const MyOpts = Opts + {
            "connstr": "c,conn=s",
        };

        const OptionColumn = 22;
    }

    constructor() : Test("jdbc test", "1.0", \ARGV, MyOpts) {
        addTestCase("test", \test());

        setupConnection();

        # execute tests and set program return value
        set_return_value(main());
    }

    private test() {
        if (!ds) {
            testSkip("no jdbc connection available");
        }

        auto v = ds.getServerVersion();
        assertTrue(exists v);
        v = ds.getClientVersion();
        assertTrue(exists v);

        #string sql = "select * from test where str = %v";
        #ds.select(sql);

        #string sql = "select * from table_1 where input_1 = 1";
        string sql = "select * from test";
        #string sql = "select * from orders";

        hash<auto> q = ds.select(sql);
        #hash<auto> q = ds.select("select * from orders where order_id = %v", "PO-2020.00001");
        printf("q: %y\n", q);

        q = ds.selectRow(sql);
        printf("q: %y\n", q);

        printf("%N\n", ds.selectRows(sql));
    }

    private usageIntern() {
        TestReporter::usageIntern(OptionColumn);
        printOption("-c,--conn=ARG", "set DB connection argument (ex: \"jdbc:user/pass@driver?...\")", OptionColumn);
    }

    private setupConnection() {
        try {
            if (!m_options.connstr) {
                m_options.connstr = ENV.QORE_DB_CONNSTR_JDBC;
            }
            ds = new Datasource(m_options.connstr);
            if (ds.getDriverName() != "jdbc")
                throw "JDBC-TEST-ERROR", sprintf("cannot execute the jdbc tests on a connection using driver %y",
                    ds.getDriverName());
            ds.open();
        } catch (hash<ExceptionInfo> ex) {
            printf("ERROR: %s: %s\n", ex.err, ex.desc);
            delete ds;
        }
    }
}